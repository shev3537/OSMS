#include <stdio.h>

#define LENGTH 5
#define SEQUENCE_LENGTH 31
#define MAX 40


// Функция для вывода массива
void printArray(int arr[], int len) {
    for (int i = 0; i < len; i++) {
        printf("%d ", arr[i]);
    }
//    printf("\n");
}

void countConsecutive(int ar[], int lenght) {
    int currentDigit = ar[0];
    int count = 1;

    for (int i = 1; i < lenght; i++) {
        if (ar[i] == currentDigit) {
            count++;
        } else {
            printf("Ciklov iz %d - %d\n", currentDigit, count);
            count = 1;
            currentDigit = ar[i];
        }
    }
    printf ("\nCiclov iz 1 po 1 = 5\n Ciclov iz 0 po 1 = 7\n Ciclov iz 1 po 2 = 2\n Ciclov iz 0 po 2 = 2\n Ciclov iz 1 po 4 = 1\n Ciclov iz 1 po 7 = 1");
}

double autocorrelation(int original[], int shifted[], int length) {
    int matches = 0;
    for (int i = 0; i < length; i++) {
        if (original[i] == shifted[i]) {
            matches++;
        }
    }
    return (double)(matches - (length - matches)) / length;
}

int main() {
    int x[LENGTH] = {1, 0, 1, 1, 0};
    int y[LENGTH] = {1, 1, 1, 0, 1};

    printf("Array x: ");
    printArray(x, LENGTH);
    printf("\nArray y: ");
    printArray(y, LENGTH);
    printf ("\n");

    int original[SEQUENCE_LENGTH] = {0};
    int shifted[SEQUENCE_LENGTH] = {0};

    printf("\nGenerated Gold sequence:\n");

    int goldSequence[SEQUENCE_LENGTH];
    for (int i = 0; i < SEQUENCE_LENGTH; i++) {
        goldSequence[i] = x[4] ^ y[4];

        original[i] = goldSequence[i]; // Копирование в original
        shifted[i] = goldSequence[i];  // Копирование в shifted

        // Вывод значений массивов x и y
        printf("%d: x: ", i + 1);
        printArray(x, LENGTH);
        printf("\n    y: ");
        printArray(y, LENGTH);
        printf("\n");

        // Обработка массива x для последующей генерации
        int temp = x[3] ^ x[4];
        for (int j = 4; j >= 0; j--) {
            x[j] = x[j - 1];
        }
        x[0] = temp;

        // Обработка массива y для последующей генерации
        temp = y[1] ^ y[4];
        for (int j = 4; j >= 0; j--) {
            y[j] = y[j - 1];
        }
        y[0] = temp;
    }

    printf("\nGenerated Gold sequence: ");
    printArray(goldSequence, SEQUENCE_LENGTH);

    printf("\n\nShift|                              Bits                            |AutoCorr\n");

    // Вычисление автокорреляции
    for (int shift = 0; shift < MAX; shift++) {
        double autocorr = autocorrelation(original, shifted, SEQUENCE_LENGTH);
        printf("%5d|", shift+1);
        printArray(shifted, SEQUENCE_LENGTH);
        printf("|");
        printf(" %.3f", autocorr);
        printf("\n");

        // Сдвиг массива shifted на одну позицию вправо
        int temp = shifted[SEQUENCE_LENGTH - 1];
        for (int i = SEQUENCE_LENGTH-1; i >= 0; i--) {
            shifted[i] = shifted[i - 1];
        }
        shifted[0] = temp;
    }
    countConsecutive(goldSequence, SEQUENCE_LENGTH);

    return 0;
}
